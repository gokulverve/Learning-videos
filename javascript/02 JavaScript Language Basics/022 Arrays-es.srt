1
00:00:01,320 --> 00:00:03,660
Narrador: las matrices son un concepto

2
00:00:03,660 --> 00:00:05,370
fundamental en JavaScript que

3
00:00:05,370 --> 00:00:08,721
vas a usar en todo tu JavaScript Live.

4
00:00:08,721 --> 00:00:10,983
Ahora aprendamos exactamente cmo funcionan.

5
00:00:12,040 --> 00:00:14,860
En muchas conferencias anteriores, tenamos diferentes

6
00:00:14,860 --> 00:00:17,490
variables para diferentes personas, pero ahora

7
00:00:17,490 --> 00:00:19,810
imagina lo til que sera

8
00:00:19,810 --> 00:00:22,120
agruparlas en una nica variable.

9
00:00:22,120 --> 00:00:24,370
En JavaScript tenemos matrices para eso.

10
00:00:24,370 --> 00:00:26,710
Son como colecciones de variables que incluso

11
00:00:26,710 --> 00:00:28,843
pueden tener diferentes tipos de datos.

12
00:00:30,218 --> 00:00:32,280
Declaremos una variable como nombres

13
00:00:33,400 --> 00:00:36,880
siempre llamados y ahora podemos usar una matriz.

14
00:00:36,880 --> 00:00:39,540
Hay diferentes formas de crear una nueva matriz,

15
00:00:39,540 --> 00:00:43,290
pero la ms fcil y la ms utilizada es usar corchetes.

16
00:00:43,290 --> 00:00:45,120
Usamos los corchetes y luego

17
00:00:45,120 --> 00:00:47,093
aqu ponemos nuestros diferentes valores.

18
00:00:47,950 --> 00:00:50,210
Digamos que queremos una matriz de

19
00:00:50,210 --> 00:00:54,293
nombres, por lo tanto, John, coma y luego agregamos un nuevo

20
00:00:55,170 --> 00:00:59,463
elemento, entonces Marque y luego digamos un tercer elemento llamado Jane.

21
00:01:01,290 --> 00:01:03,500
Ahora tenemos una matriz de nombres,

22
00:01:03,500 --> 00:01:07,330
una matriz con tres elementos llamados John, Mark y Jane,

23
00:01:07,330 --> 00:01:08,983
todos separados por estas comas.

24
00:01:10,520 --> 00:01:12,763
Vamos a crear uno nuevo llamado aos.

25
00:01:14,150 --> 00:01:15,800
Como mencion, existen diferentes

26
00:01:15,800 --> 00:01:18,363
formas de crear matrices, as que vamos

27
00:01:19,320 --> 00:01:23,980
a ver otra, que es una nueva matriz, as que puedes hacer

28
00:01:23,980 --> 00:01:26,430
una matriz como esta bsicamente llamando

29
00:01:26,430 --> 00:01:28,970
a esta funcin de matriz aqu con

30
00:01:28,970 --> 00:01:33,970
una palabra clave nueva y luego all pasas los datos que quieres estar

31
00:01:34,940 --> 00:01:37,883
en la matriz, entonces 1990, 1969 y 1948.

32
00:01:40,639 --> 00:01:42,790
Esta ser una matriz igual, pero, una vez

33
00:01:42,790 --> 00:01:45,650
ms, esto aqu se usa mucho ms, por lo que

34
00:01:45,650 --> 00:01:46,850
normalmente no utilizars esta.

35
00:01:46,850 --> 00:01:49,780
Solo quera que supieras que tambin existe.

36
00:01:49,780 --> 00:01:52,920
Decimos que las matrices estn basadas en cero,

37
00:01:52,920 --> 00:01:56,600
lo que significa que el primer elemento es el nmero

38
00:01:56,600 --> 00:01:59,400
de elemento cero, el segundo es el

39
00:01:59,400 --> 00:02:02,870
elemento nmero uno, el nmero dos, y as sucesivamente.

40
00:02:02,870 --> 00:02:04,730
Veamos ahora cmo podemos acceder a los

41
00:02:04,730 --> 00:02:05,973
elementos en una matriz.

42
00:02:07,590 --> 00:02:09,140
Vamos a iniciar sesin en la

43
00:02:10,670 --> 00:02:13,410
consola, los nombres, y luego usaremos los corchetes de nuevo y

44
00:02:13,410 --> 00:02:15,483
luego el ndice, por lo que el nmero.

45
00:02:16,960 --> 00:02:20,280
Los nombres, corchetes, cero sern el elemento cero de

46
00:02:20,280 --> 00:02:21,630
la matriz de nombres.

47
00:02:21,630 --> 00:02:23,680
Recuerde que las matrices estn basadas

48
00:02:23,680 --> 00:02:27,030
en cero y, por lo tanto, John es el elemento cero.

49
00:02:27,030 --> 00:02:30,500
Echemos un vistazo a eso y, de hecho, vemos a John.

50
00:02:30,500 --> 00:02:33,250
Por supuesto, tambin podramos registrar toda la matriz, as

51
00:02:33,250 --> 00:02:35,620
que as es como se ver, por lo

52
00:02:35,620 --> 00:02:37,910
que tenemos aqu, indicamos el nmero tres,

53
00:02:37,910 --> 00:02:40,320
que es la cantidad de elementos en la

54
00:02:40,320 --> 00:02:42,500
matriz y luego toda la matriz.

55
00:02:42,500 --> 00:02:44,700
De hecho, tambin podemos acceder a este nmero aqu

56
00:02:45,730 --> 00:02:47,380
y todo lo que tenemos que hacer

57
00:02:47,380 --> 00:02:50,133
para hacer eso es decir nombres. de longitud, entonces aprenderemos ms

58
00:02:51,280 --> 00:02:54,220
tarde qu significa este punto aqu, pero por ahora solo

59
00:02:54,220 --> 00:02:57,710
s que podemos hacer nombres. longitud y luego eso

60
00:02:57,710 --> 00:03:00,820
nos mostrar cuntos elementos hay all.

61
00:03:00,820 --> 00:03:03,220
En este caso, acaba de regresar indefinido,

62
00:03:03,220 --> 00:03:06,680
pero eso es solo porque he escrito mal la longitud.

63
00:03:06,680 --> 00:03:08,440
As es como debera verse

64
00:03:08,440 --> 00:03:11,090
y ahora deberamos obtener el nmero tres,

65
00:03:11,090 --> 00:03:13,403
entonces tenemos tres elementos en nuestra matriz.

66
00:03:15,160 --> 00:03:16,170
Accedemos al nmero cero.

67
00:03:16,170 --> 00:03:17,820
Tambin podemos acceder al nmero dos, por

68
00:03:17,820 --> 00:03:19,463
ejemplo, y entonces debera ser Jane.

69
00:03:21,080 --> 00:03:23,310
As es como recuperamos, bsicamente, datos

70
00:03:23,310 --> 00:03:26,530
de la matriz, pero tambin podemos usar la

71
00:03:26,530 --> 00:03:29,840
sintaxis para mutar los datos en la matriz.

72
00:03:29,840 --> 00:03:34,210
Podemos decir nombres y uno, que ser Mark y luego podemos decir

73
00:03:34,210 --> 00:03:36,270
que queremos que sea Ben en

74
00:03:37,490 --> 00:03:38,913
lugar de Mark.

75
00:03:40,470 --> 00:03:42,473
Si ahora registramos la matriz, entonces

76
00:03:48,220 --> 00:03:50,130
deberamos ver que es diferente.

77
00:03:50,130 --> 00:03:52,840
Ahora est en la posicin nmero uno, es

78
00:03:52,840 --> 00:03:54,913
Ben y ya no es Mark.

79
00:03:56,070 --> 00:03:58,133
Tambin podemos agregar datos a la matriz, por

80
00:03:59,190 --> 00:04:01,140
lo que podemos acceder a una posicin

81
00:04:01,140 --> 00:04:02,540
que ni siquiera est all.

82
00:04:02,540 --> 00:04:05,323
Digamos que queremos que la posicin cinco sea Mary.

83
00:04:09,110 --> 00:04:10,940
Veamos qu pasa entonces y en realidad vamos

84
00:04:10,940 --> 00:04:14,260
a ponerlo aqu antes de esta consola. inicie sesin y vea

85
00:04:16,640 --> 00:04:19,630
que ahora tenemos vaco aqu y

86
00:04:19,630 --> 00:04:21,930
luego, solo entonces viene Mara.

87
00:04:21,930 --> 00:04:25,520
Ahora, si quisiramos agregar Mary como ltimo elemento de la

88
00:04:25,520 --> 00:04:28,140
matriz, podramos usar esta propiedad que utilizamos antes,

89
00:04:28,140 --> 00:04:31,480
por lo que los nombres. longitud.

90
00:04:31,480 --> 00:04:34,080
Recuerde que esto es tres en este punto.

91
00:04:34,080 --> 00:04:36,910
Si decimos nombres, nombres. de longitud y esto luego vencer

92
00:04:36,910 --> 00:04:39,763
a tres, por lo que los nombres tres deberan ser Mara.

93
00:04:41,070 --> 00:04:45,580
Luego agrega esto como ltimo elemento en la matriz, bsicamente.

94
00:04:45,580 --> 00:04:47,210
Tener sentido?

95
00:04:47,210 --> 00:04:50,403
Primero, permtanme que lo agregue aqu, as que mute

96
00:04:52,530 --> 00:04:54,200
los datos de la matriz,

97
00:04:54,200 --> 00:04:55,223
aqu podemos decir,

98
00:04:59,470 --> 00:05:00,743
Inicializar nueva matriz.

99
00:05:02,130 --> 00:05:05,580
Primero, mutamos la matriz en la posicin nmero uno y agregamos

100
00:05:05,580 --> 00:05:08,750
Ben, luego aqu mutamos la matriz en los nombres de

101
00:05:08,750 --> 00:05:11,110
los nmeros de posicin. longitud y eso

102
00:05:11,110 --> 00:05:12,943
es tres en este punto.

103
00:05:13,840 --> 00:05:16,170
Entonces, en la posicin nmero tres, agregaremos

104
00:05:16,170 --> 00:05:18,900
a Mary, por lo que la posicin nmero

105
00:05:18,900 --> 00:05:22,510
tres ser la ltima, por lo que cero, uno, dos

106
00:05:22,510 --> 00:05:24,263
y luego tres son nuevos.

107
00:05:25,670 --> 00:05:28,090
Espero que comiences a ver cun tiles

108
00:05:28,090 --> 00:05:30,650
pueden ser las matrices al mantener esta informacin

109
00:05:30,650 --> 00:05:32,490
diferente, todo en una variable.

110
00:05:32,490 --> 00:05:35,413
Por supuesto, esto tambin puede ser diferentes tipos de datos.

111
00:05:40,990 --> 00:05:43,000
Digamos que queremos tener toda

112
00:05:43,000 --> 00:05:45,983
la informacin sobre John, todo en una variable.

113
00:05:47,010 --> 00:05:48,370
Djenos un poco

114
00:05:48,370 --> 00:05:51,490
ms de espacio aqu y entonces digamos

115
00:05:54,130 --> 00:05:56,090
var john y ahora podemos

116
00:05:56,090 --> 00:05:58,720
poner el primer nombre, podemos poner

117
00:05:58,720 --> 00:06:01,940
el apellido, podemos poner la fecha de

118
00:06:01,940 --> 00:06:06,560
nacimiento, podemos poner el trabajo, y podemos decir que l es

119
00:06:06,560 --> 00:06:09,913
soltero o que no est casado, digamos falso.

120
00:06:11,950 --> 00:06:15,310
Ahora tenemos diferentes tipos de datos, todo en una estructura

121
00:06:15,310 --> 00:06:17,430
de datos, que es esta matriz.

122
00:06:17,430 --> 00:06:20,360
Estos son los fundamentos muy bsicos de las matrices,

123
00:06:20,360 --> 00:06:22,340
pero vamos a hacerlo un poco

124
00:06:22,340 --> 00:06:24,260
mejor, incluso porque hay un par

125
00:06:24,260 --> 00:06:26,740
de funciones que bsicamente podemos aplicar a las matrices.

126
00:06:26,740 --> 00:06:28,800
Estas funciones se llaman mtodos

127
00:06:28,800 --> 00:06:30,980
que son especficos de las matrices.

128
00:06:30,980 --> 00:06:32,800
Aprender todo sobre mtodos y por

129
00:06:32,800 --> 00:06:34,620
qu se llaman mtodos en este

130
00:06:34,620 --> 00:06:36,640
caso en las prximas dos conferencias.

131
00:06:36,640 --> 00:06:39,180
Por ahora, solo s que podemos hacer

132
00:06:39,180 --> 00:06:42,210
algo como esto, as que tenemos nuestra variable

133
00:06:42,210 --> 00:06:46,350
John y luego podemos decir. presione y luego esto es como

134
00:06:46,350 --> 00:06:47,657
una funcin normal.

135
00:06:47,657 --> 00:06:50,000
La funcin push o el mtodo push

136
00:06:50,000 --> 00:06:52,470
lo que har es agregar un elemento

137
00:06:52,470 --> 00:06:53,950
al final de la matriz.

138
00:06:53,950 --> 00:06:56,400
Digamos que el color favorito de

139
00:06:57,330 --> 00:07:00,040
John es el azul, por lo que

140
00:07:00,040 --> 00:07:04,480
si pasamos en azul ahora aqu, entonces agregar ese elemento al

141
00:07:04,480 --> 00:07:09,270
final de la matriz, entonces consola. Log John y entonces

142
00:07:09,270 --> 00:07:11,393
veamos cmo funcion.

143
00:07:12,450 --> 00:07:15,520
De hecho, ahora tenemos la matriz que declaramos inicialmente

144
00:07:15,520 --> 00:07:18,710
ms el elemento azul al final de la matriz.

145
00:07:18,710 --> 00:07:22,170
Eso es lo que el mtodo push, la funcin push aqu hizo

146
00:07:22,170 --> 00:07:23,413
para la matriz John.

147
00:07:24,370 --> 00:07:26,380
No se preocupe por esta sintaxis de

148
00:07:26,380 --> 00:07:30,110
punto aqu y esta funcin, de esta manera llamamos a esta funcin de insercin.

149
00:07:30,110 --> 00:07:31,970
Aprenderemos por qu funciona de esta

150
00:07:31,970 --> 00:07:33,660
manera en un par de conferencias.

151
00:07:33,660 --> 00:07:35,900
Hay un par de mtodos que quiero mostrarte

152
00:07:35,900 --> 00:07:37,690
ahora porque push no es el nico.

153
00:07:37,690 --> 00:07:40,040
Hay toneladas de mtodos diferentes para matrices.

154
00:07:40,040 --> 00:07:42,890
Ahora solo te mostraremos un par de ellos ahora.

155
00:07:42,890 --> 00:07:45,077
Tambin podemos usar john unshift y lo

156
00:07:47,280 --> 00:07:50,330
que har unshift es muy similar a push, pero en

157
00:07:50,330 --> 00:07:52,410
lugar de agregarlo al final de la

158
00:07:52,410 --> 00:07:54,320
matriz, lo agregar al principio.

159
00:07:54,320 --> 00:07:56,500
Digamos que queremos agregar un ttulo,

160
00:07:56,500 --> 00:08:01,500
por lo que el Sr. para que sea el Sr. John Smith.

161
00:08:01,598 --> 00:08:04,020
Ahora tenemos el primer elemento, el Sr. y luego el resto como hemos visto en los pasos anteriores.

162
00:08:04,020 --> 00:08:07,970
Estos dos mtodos aqu, agregan elementos a la matriz.

163
00:08:07,970 --> 00:08:11,060
Veamos ahora dos mtodos que los eliminan, entonces john. pop y lo que esto har,

164
00:08:11,060 --> 00:08:15,343
elimina el elemento del final.

165
00:08:18,320 --> 00:08:21,683
Ahora vamos a iniciar sesin en la consola

166
00:08:23,760 --> 00:08:26,860
de nuevo, y ahora ves que tenemos la

167
00:08:26,860 --> 00:08:30,000
matriz de antes, pero sin el elemento azul.

168
00:08:30,000 --> 00:08:32,770
Si lo hacemos de nuevo, eliminar otro del

169
00:08:32,770 --> 00:08:36,470
final, por lo que ahora tambin deberamos perder el falso.

170
00:08:36,470 --> 00:08:40,850
Echemos un vistazo a eso y, de hecho, ahora

171
00:08:40,850 --> 00:08:42,200
elimin estos dos.

172
00:08:42,200 --> 00:08:44,993
Finalmente, tambin tenemos un mtodo para eliminar el

173
00:08:47,790 --> 00:08:49,930
primer elemento y ese se llama shift.

174
00:08:49,930 --> 00:08:53,453
Ahora deberamos perder al Sr. aqu y, s, de hecho se

175
00:08:54,930 --> 00:08:57,430
ha ido.

176
00:08:57,430 --> 00:08:58,833
Mtodos de empujar y cambiar, estallar y cambiar.

177
00:09:00,830 --> 00:09:04,330
Solo una ltima (murmura) que quiero mostrarte,

178
00:09:04,330 --> 00:09:06,380
que es el indexOf.

179
00:09:06,380 --> 00:09:07,900
Djame mostrarte eso, as

180
00:09:09,610 --> 00:09:10,810
que indexOf devolver

181
00:09:11,860 --> 00:09:15,690
la posicin del argumento que pasamos dentro de esta matriz.

182
00:09:15,690 --> 00:09:17,933
Digamos que queremos saber la posicin

183
00:09:18,920 --> 00:09:20,750
de la dcada de 1990,

184
00:09:20,750 --> 00:09:24,950
as que pasamos este valor e indexef luego regresar en qu posicin

185
00:09:24,950 --> 00:09:27,800
aparece este 1990 en la matriz de John.

186
00:09:27,800 --> 00:09:30,913
Vamos a registrar eso en la consola, as que le echamos un vistazo.

187
00:09:33,110 --> 00:09:36,508
Qu crees que ser?

188
00:09:36,508 --> 00:09:38,460
Vamos a adivinar y ahora veamos.

189
00:09:38,460 --> 00:09:41,730
Es el nmero dos y de hecho lo es,

190
00:09:41,730 --> 00:09:44,090
as que cero, uno y dos.

191
00:09:44,090 --> 00:09:46,863
Devuelve la posicin en la que el elemento est

192
00:09:48,290 --> 00:09:50,530
en la matriz, si est en la

193
00:09:50,530 --> 00:09:53,690
matriz, y si ese elemento no est realmente presente en

194
00:09:53,690 --> 00:09:55,520
la matriz, devolver menos uno.

195
00:09:55,520 --> 00:09:57,590
Digamos que pasamos por otra

196
00:09:57,590 --> 00:09:59,880
cosa, digamos 23, por lo que

197
00:09:59,880 --> 00:10:03,340
ahora debera regresar menos uno y de hecho lo

198
00:10:03,340 --> 00:10:06,200
hace porque no tenemos 23 en ese conjunto.

199
00:10:06,200 --> 00:10:07,510
Una de las cosas a

200
00:10:07,510 --> 00:10:09,320
las que este mtodo es ms

201
00:10:09,320 --> 00:10:12,620
til es probar si un elemento est en la matriz o no.

202
00:10:12,620 --> 00:10:14,780
Djame mostrarte eso.

203
00:10:14,780 --> 00:10:15,980
Usemos el

204
00:10:16,840 --> 00:10:18,500
operador (murmullos) que

205
00:10:18,500 --> 00:10:20,160
aprendimos antes, entonces juan. indexOf y ahora vamos a probar si John

206
00:10:20,160 --> 00:10:21,647
es un diseador.

207
00:10:23,460 --> 00:10:26,493
Preguntamos la posicin del elemento diseador

208
00:10:28,630 --> 00:10:33,073
en la matriz, para que nos devuelva un nmero,

209
00:10:34,030 --> 00:10:36,640
entonces decimos si es igual

210
00:10:37,930 --> 00:10:39,983
a menos uno, bueno,

211
00:10:42,010 --> 00:10:47,010
entonces John no es diseador y, de otro modo, John es diseador.

212
00:10:49,040 --> 00:10:54,040
Vamos a verificarlo.

213
00:10:57,330 --> 00:10:58,380
No ocurre nada, por supuesto,

214
00:10:59,740 --> 00:11:01,800
porque no hemos asignado esto aqu a ninguna variable.

215
00:11:01,800 --> 00:11:04,060
Digamos var isDesigner y luego podemos

216
00:11:04,060 --> 00:11:06,197
iniciar sesin en la consola.

217
00:11:08,651 --> 00:11:11,734
John NO es un diseador.

218
00:11:17,868 --> 00:11:19,785
Veamos por qu sucedi eso.

219
00:11:20,620 --> 00:11:22,440
Buscamos el diseador en la

220
00:11:22,440 --> 00:11:25,260
matriz, pero ese elemento no est realmente en

221
00:11:25,260 --> 00:11:27,810
esa matriz, por lo que regresar menos uno.

222
00:11:27,810 --> 00:11:29,940
Esta parte entera aqu ser menos uno y entonces

223
00:11:29,940 --> 00:11:32,310
la prueba es menos uno igual a menos uno?

224
00:11:32,310 --> 00:11:35,840
S, de hecho lo es.

225
00:11:35,840 --> 00:11:36,803
A la variable isDesigner se

226
00:11:38,112 --> 00:11:40,250
le asignar que John NO es una cadena de diseador.

227
00:11:40,250 --> 00:11:42,433
Digamos que ahora lo cambiamos por diseador,

228
00:11:43,340 --> 00:11:46,450
por lo que ahora deberamos ver que John IS es

229
00:11:46,450 --> 00:11:49,320
diseador, ya que ahora realmente devolver este ndice.

230
00:11:49,320 --> 00:11:52,363
Probmoslo en la consola, entonces indexOf

231
00:11:53,210 --> 00:11:54,910
y ver que es

232
00:11:56,420 --> 00:11:59,650
tres, entonces cero, uno, dos y tres.

233
00:11:59,650 --> 00:12:03,430
Tres es, por supuesto, diferente de menos uno, por

234
00:12:03,430 --> 00:12:06,600
lo que ahora tenemos John IS un diseador.

235
00:12:06,600 --> 00:12:09,730
Estos son solo algunos mtodos en arreglos

236
00:12:09,730 --> 00:12:13,450
y les mostrar muchos, muchos, muchos ms durante

237
00:12:13,450 --> 00:12:15,680
el resto del curso.

238
00:12:15,680 --> 00:12:17,460
Por ahora, ya sabes cmo funcionan las matrices y eso es increble.

239
00:12:17,460 --> 00:12:20,390
Es una estructura de datos realmente poderosa

240
00:12:20,390 --> 00:12:22,580
que podemos usar en JavaScript.

241
00:12:22,580 --> 00:12:24,890
Ahora creo que ya aprendi lo suficiente

242
00:12:24,890 --> 00:12:26,700
como para asumir otro desafo de

243
00:12:26,700 --> 00:12:29,200
codificacin, as que hagmoslo en el siguiente video.

244
00:12:29,200 --> 00:12:31,250
&nbsp;

