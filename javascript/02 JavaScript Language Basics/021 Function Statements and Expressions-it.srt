1
00:00:01,399 --> 00:00:02,340
Istruttore: in

2
00:00:02,340 --> 00:00:05,940
questo video imparerai come funzionano le espressioni e le espressioni.

3
00:00:05,940 --> 00:00:07,780
Quindi, nell'ultimo video in cui per

4
00:00:07,780 --> 00:00:10,620
la prima volta abbiamo parlato delle funzioni, ho sempre

5
00:00:10,620 --> 00:00:13,360
dichiarato le funzioni usando le istruzioni di funzione, ma

6
00:00:13,360 --> 00:00:16,190
in realt c' un altro modo di scrivere le

7
00:00:16,190 --> 00:00:19,870
funzioni in Java Script, e cio utilizzando le espressioni di funzione, okay.

8
00:00:19,870 --> 00:00:22,000
Quindi, tutta la logica delle funzioni che

9
00:00:22,000 --> 00:00:24,760
ti ho spiegato nell'ultima lezione funziona ancora allo stesso modo.

10
00:00:24,760 --> 00:00:27,820
Scriviamo semplicemente la funzione in un modo leggermente diverso, e

11
00:00:27,820 --> 00:00:29,220
sotto il cofano di Java

12
00:00:29,220 --> 00:00:31,520
Script funziona anche in modo molto diverso in

13
00:00:31,520 --> 00:00:34,230
realt, ma per ora non  importante per noi.

14
00:00:34,230 --> 00:00:36,033
Voglio solo che tu sappia a questo

15
00:00:36,033 --> 00:00:38,280
punto che abbiamo entrambe le istruzioni di funzione

16
00:00:38,280 --> 00:00:40,650
e le espressioni, quindi lascia che te lo mostri.

17
00:00:40,650 --> 00:00:43,590
E cos, quando scriviamo un'espressione di funzione, iniziamo

18
00:00:43,590 --> 00:00:46,180
scrivendo la funzione fondamentalmente senza il nome,

19
00:00:46,180 --> 00:00:48,060
quindi usiamo ancora la parola

20
00:00:48,060 --> 00:00:49,980
chiave function e poi subito

21
00:00:49,980 --> 00:00:52,340
dopo inseriamo l'elenco degli argomenti, e

22
00:00:52,340 --> 00:00:56,183
quindi questo caso voglio incollarlo nel lavoro, inserisci il nome

23
00:00:57,030 --> 00:00:59,230
Ok, e solo allora abbiamo praticamente

24
00:00:59,230 --> 00:01:01,450
assegnato questa funzione a una variabile.

25
00:01:01,450 --> 00:01:03,540
Quindi, dichiariamo una variabile, e

26
00:01:03,540 --> 00:01:06,460
questa che chiamer "whatYouDo", quindi fondamentalmente  una

27
00:01:06,460 --> 00:01:09,380
funzione in cui incolliamo il lavoro e poi

28
00:01:09,380 --> 00:01:12,550
la funzione ci dice cosa fa quella persona.

29
00:01:12,550 --> 00:01:16,403
Quindi, "whatDoououDo", cos ora  una variabile e ci

30
00:01:18,221 --> 00:01:21,720
che assegniamo a tale variabile  semplicemente questa funzione.

31
00:01:21,720 --> 00:01:24,760
Quindi, funzione in cui incolliamo il lavoro e

32
00:01:24,760 --> 00:01:27,450
il nome e poi, naturalmente, il blocco funzione.

33
00:01:27,450 --> 00:01:29,350
Va bene, quindi confrontandolo con quello

34
00:01:29,350 --> 00:01:31,850
che avevamo prima, va bene, scriviamolo qui.

35
00:01:33,100 --> 00:01:36,823
Quindi, questa  un'espressione di funzione.

36
00:01:39,350 --> 00:01:42,290
E se facessimo la stessa cosa

37
00:01:43,740 --> 00:01:47,907
di una dichiarazione di funzione, scriveremmo "Funzione cosaDoYouDo" e

38
00:01:49,530 --> 00:01:53,700
quindi la lista degli argomenti, quindi qualcosa di simile.

39
00:01:53,700 --> 00:01:55,300
Ok, quindi vedi la differenza?

40
00:01:56,140 --> 00:01:58,110
Ok, lasciatemi commentare qui.

41
00:02:00,440 --> 00:02:02,340
Quindi, questo  solo cos sai qual

42
00:02:02,340 --> 00:02:04,880
 la differenza tra una dichiarazione e un'espressione, e ancora,

43
00:02:04,880 --> 00:02:07,504
il modo in cui chiamiamo la funzione e il modo

44
00:02:07,504 --> 00:02:08,670
in cui incolliamo i parametri

45
00:02:08,670 --> 00:02:11,060
e tutto ci che hai imparato prima funziona ancora

46
00:02:11,060 --> 00:02:13,330
esattamente allo stesso modo con le espressioni di funzione.

47
00:02:13,330 --> 00:02:16,620
Va bene, quindi dopo user una dichiarazione di switch

48
00:02:16,620 --> 00:02:18,860
qui in modo che tu possa

49
00:02:18,860 --> 00:02:22,640
praticare alcune cose diverse che abbiamo imparato prima e faremo

50
00:02:22,640 --> 00:02:24,930
qualcosa di simile all'interruttore che avevamo prima.

51
00:02:24,930 --> 00:02:27,790
Quindi, cambieremo il lavoro qui e poi

52
00:02:27,790 --> 00:02:31,523
i nostri diversi casi saranno, per esempio, insegnanti.

53
00:02:34,700 --> 00:02:36,700
E aggiungiamo i casi qui prima.

54
00:02:36,700 --> 00:02:39,923
Quindi, insegnante di casi, allora abbiamo un autista. E infine il caso predefinito, se

55
00:02:42,750 --> 00:02:45,160
Poi abbiamo un designer. nessuno dei precedenti si applica.

56
00:02:50,060 --> 00:02:52,439
Va bene, ora l'altra volta in

57
00:02:52,439 --> 00:02:54,420
cui abbiamo fatto questo switch

58
00:02:54,420 --> 00:02:56,880
simile avevamo un log cancellato e

59
00:02:56,880 --> 00:03:00,295
poi una pausa, ma questa volta restituiremo effettivamente qualcosa.

60
00:03:00,295 --> 00:03:01,490
Quindi, supponiamo di voler restituire

61
00:03:01,490 --> 00:03:03,500
il nome pi la stringa che avevamo prima.

62
00:03:03,500 --> 00:03:06,870
Quindi, "insegna ai bambini come codificare. "Ok, e ora

63
00:03:08,150 --> 00:03:10,510
non dovremo

64
00:03:10,510 --> 00:03:15,160
includere la pausa.

65
00:03:15,160 --> 00:03:17,250
Ci  dovuto a qualcosa che

66
00:03:17,250 --> 00:03:19,120
non ti ho detto prima,

67
00:03:19,120 --> 00:03:20,520
cio quando raggiungiamo la

68
00:03:20,520 --> 00:03:24,010
parola chiave return qui, quindi restituiamo ci che definiamo dopo

69
00:03:24,010 --> 00:03:27,810
di esso, ma ci che accade  che la funzione termina immediatamente.

70
00:03:27,810 --> 00:03:29,932
Quindi, in pratica, usciamo immediatamente dalla funzione

71
00:03:29,932 --> 00:03:31,280
e torniamo al punto

72
00:03:31,280 --> 00:03:33,430
in cui abbiamo effettivamente chiamato la funzione.

73
00:03:33,430 --> 00:03:35,460
Ok, quindi le parole chiave di restituzione non restituiscono

74
00:03:35,460 --> 00:03:37,700
solo il valore, ma termina anche immediatamente la funzione.

75
00:03:37,700 --> 00:03:41,250
Ok, quindi non abbiamo bisogno della pausa qui.

76
00:03:41,250 --> 00:03:43,810
Quindi, nel caso in cui il lavoro

77
00:03:43,810 --> 00:03:46,430
sia di tipo insegnante, restituiamo questa stringa

78
00:03:46,430 --> 00:03:48,810
qui e quindi abbandoniamo immediatamente la funzione.

79
00:03:48,810 --> 00:03:51,130
Va bene, ora che il lavoro

80
00:03:51,130 --> 00:03:53,223
 l'autista, beh, allora restituiamo qualcos'altro.

81
00:03:55,718 --> 00:03:58,800
Ok, e quindi in questo caso questa linea qui

82
00:03:58,800 --> 00:04:00,600
non viene mai eseguita, ovviamente,

83
00:04:01,840 --> 00:04:04,520
e quindi non finir la funzione e invece

84
00:04:04,520 --> 00:04:07,360
arriver a questo caso successivo, che  il driver.

85
00:04:07,360 --> 00:04:09,640
Quindi, nome e, diciamo, "guida un taxi a Lisbona. "Allora la stessa cosa "Disegna bellissimi siti web" e Fa

86
00:04:09,640 --> 00:04:11,890
per il designer. infine il caso predefinito. qualcos'altro Okay, proviamo ora.

87
00:04:11,890 --> 00:04:16,890
Quindi, proprio come prima chiamiamo la nostra funzione "whatDoououDo",

88
00:04:20,520 --> 00:04:22,640
quindi incolliamo il lavoro e un nome.

89
00:04:30,617 --> 00:04:32,670
Quindi, inseriamo "insegnante" e, naturalmente, "John. "E non dimenticare che questa funzione qui

90
00:04:32,670 --> 00:04:34,060
restituisce qualcosa, quindi dovremmo

91
00:04:41,840 --> 00:04:43,063
salvarla da qualche parte.

92
00:04:44,660 --> 00:04:47,150
Va bene, o invece

93
00:04:47,150 --> 00:04:50,990
di salvarlo, possiamo anche semplicemente accedere

94
00:04:50,990 --> 00:04:53,560
alla console, quindi facciamolo invece.

95
00:04:53,560 --> 00:04:58,560
Ok, quindi  qualcosa che non abbiamo fatto prima.

96
00:05:00,110 --> 00:05:02,260
Quindi, immediatamente registrato alla

97
00:05:02,260 --> 00:05:05,800
console il risultato di chiamare questa funzione.

98
00:05:05,800 --> 00:05:07,830
Ok, ma funziona allo stesso modo.

99
00:05:07,830 --> 00:05:10,043
Quindi, in questo caso, quello che torneremo qui  la stringa "John

100
00:05:11,168 --> 00:05:12,173
insegna ai bambini come codificare", giusto?

101
00:05:13,490 --> 00:05:15,860
E cos sar quindi registrato nella console.

102
00:05:15,860 --> 00:05:17,570
Quindi, esattamente come ho detto,

103
00:05:17,570 --> 00:05:20,070
questa  la stringa che ci aspettavamo, giusto?

104
00:05:20,070 --> 00:05:22,030
E ora, naturalmente, possiamo farlo pi volte. Bene, possiamo dire "Vediamo cosa succede ora,

105
00:05:22,030 --> 00:05:24,667
Quindi, diciamo "designer, Jane", e poi. che "Mark  in pensione. quindi" Jane disegna "bellissimi siti

106
00:05:24,667 --> 00:05:27,850
web", quindi Mark fa qualcos'altro con

107
00:05:27,850 --> 00:05:30,503
solo la clausola predefinita qui.

108
00:05:32,010 --> 00:05:35,400
Quindi, di nuovo, vedi quanto  utile essere in

109
00:05:35,400 --> 00:05:37,520
grado di riutilizzare tutto questo codice.

110
00:05:37,520 --> 00:05:40,633
Altrimenti dovremmo essenzialmente scrivere questo qui tre volte

111
00:05:43,230 --> 00:05:47,390
se si volesse avere questo scenario con tre persone e

112
00:05:47,390 --> 00:05:49,597
tre diversi lavori.

113
00:05:51,280 --> 00:05:54,177
E cos semplicemente incolliamo alla funzione le

114
00:05:54,177 --> 00:05:56,580
cose che cambiano, in pratica.

115
00:05:56,580 --> 00:05:58,450
Quindi, ci che  diverso qui 

116
00:05:58,450 --> 00:06:00,640
il lavoro e il nome per ciascuno di

117
00:06:00,640 --> 00:06:02,860
questi casi, e quindi  quello che incolliamo

118
00:06:02,860 --> 00:06:05,430
nella funzione, sia il lavoro che il nome, e

119
00:06:05,430 --> 00:06:08,140
quindi in base a ci la funzione fa qualcosa, che

120
00:06:08,140 --> 00:06:10,570
in questo caso produce un stringa e quindi restituisce.

121
00:06:10,570 --> 00:06:12,843
Quindi, di nuovo, possiamo sempre vedere una

122
00:06:12,843 --> 00:06:15,240
funzione come una macchina che riceve qualcosa,

123
00:06:15,240 --> 00:06:17,350
quindi fa qualcosa con i dati

124
00:06:17,350 --> 00:06:19,250
e restituisce qualcosa di diverso.

125
00:06:19,250 --> 00:06:21,050
Ok, ecco come scriviamo un'espressione di funzione.

126
00:06:21,050 --> 00:06:23,520
Ora, le dichiarazioni e le espressioni non

127
00:06:23,520 --> 00:06:26,120
si applicano solo alle funzioni, ma in realt

128
00:06:26,120 --> 00:06:28,540
sono un concetto globale in Java Script.

129
00:06:28,540 --> 00:06:31,240
Quindi, prima di proseguire parliamo un po 'della differenza

130
00:06:31,240 --> 00:06:33,230
tra le dichiarazioni e le espressioni.

131
00:06:33,230 --> 00:06:34,720
Quindi, le espressioni di Script

132
00:06:34,720 --> 00:06:36,800
Java sono pezzi di codice che producono

133
00:06:36,800 --> 00:06:40,360
sempre un valore, e non importa quanto tempo sono finch il codice restituisce

134
00:06:40,360 --> 00:06:42,290
un singolo valore, e quindi  un'espressione.

135
00:06:42,290 --> 00:06:44,230
Diamo un'occhiata a questo nella console qui.

136
00:06:44,230 --> 00:06:47,320
E cos, per esempio, se scrivi semplicemente "2 +

137
00:06:47,320 --> 00:06:49,260
3", beh, allora vedi che questo

138
00:06:49,260 --> 00:06:52,170
produce un risultato, quindi un 5 in questo caso.

139
00:06:52,170 --> 00:06:54,820
E quindi, cosa abbiamo appena scritto

140
00:06:54,820 --> 00:06:57,650
qui in un'espressione di Java Script, ok?

141
00:06:57,650 --> 00:07:00,170
E lo stesso accade quando, per esempio, chiamiamo questa funzione.

142
00:07:00,170 --> 00:07:03,470
Quindi, chiamiamo questa funzione proprio qui

143
00:07:03,470 --> 00:07:06,090
nella console, e in realt

144
00:07:06,090 --> 00:07:10,830
abbiamo accesso a queste funzioni qui direttamente nella console.

145
00:07:10,830 --> 00:07:13,070
Ok, quindi  qualcosa che non abbiamo fatto fino

146
00:07:13,070 --> 00:07:15,000
a questo punto basandoci fondamentalmente sulle variabili e

147
00:07:15,000 --> 00:07:17,114
sulla funzione che definiamo il nostro codice interno

148
00:07:17,114 --> 00:07:18,940
direttamente nella nostra console, ma possiamo farlo.

149
00:07:18,940 --> 00:07:22,780
Va bene, e cos quando chiamiamo questa funzione qui, vedete che naturalmente restituisce

150
00:07:22,780 --> 00:07:24,839
un valore, e quindi di nuovo, questa

151
00:07:24,839 --> 00:07:26,350
chiamata di funzione qui  un'espressione.

152
00:07:26,350 --> 00:07:28,830
E in realt, tutto ci che facciamo, ancora

153
00:07:28,830 --> 00:07:31,247
una volta, produce un risultato  un'espressione.

154
00:07:31,247 --> 00:07:33,370
Quindi, ad esempio, "typeof 23", e ci

155
00:07:33,370 --> 00:07:35,680
restituisce questo risultato di "numero", e quindi

156
00:07:35,680 --> 00:07:37,430
di nuovo, questa  un'espressione.

157
00:07:38,354 --> 00:07:40,370
Va bene, quindi questo significa

158
00:07:40,370 --> 00:07:43,493
che ogni volta che Java Script si aspetta

159
00:07:44,422 --> 00:07:46,500
un valore, dobbiamo sempre scrivere un'espressione.

160
00:07:46,500 --> 00:07:47,820
Ok, e l'importanza di

161
00:07:47,820 --> 00:07:51,220
questo concetto potrebbe essere un po 'difficile da comprendere

162
00:07:51,220 --> 00:07:55,120
a questo punto per te, okay, ma  davvero importante imparare

163
00:07:55,120 --> 00:07:57,819
queste cose per il futuro, va bene? Ad esempio, qui Java Script ovviamente si aspetta un

164
00:07:57,819 --> 00:07:59,060
Quindi, per esempio, qui in questa dichiarazione di FL. valore qui, e quindi

165
00:07:59,060 --> 00:08:01,270
questo qui deve essere un'espressione, e ovviamente 

166
00:08:01,270 --> 00:08:03,360
perch questo operatore qui ovviamente restituir vero

167
00:08:03,360 --> 00:08:05,260
o falso, e quindi questo  un

168
00:08:06,197 --> 00:08:07,890
risultato e quindi, quindi  un'espressione.

169
00:08:07,890 --> 00:08:10,390
Ok, ora comunque, riguardo alle

170
00:08:10,390 --> 00:08:12,740
affermazioni, fanno solo azioni.

171
00:08:12,740 --> 00:08:15,680
Quindi, fanno cose ma non producono risultati immediati,

172
00:08:15,680 --> 00:08:18,420
quindi queste sono cose come le dichiarazioni FL,

173
00:08:19,640 --> 00:08:22,490
un circuito per il quale parleremo pi avanti,

174
00:08:22,490 --> 00:08:24,920
o anche una dichiarazione di funzione.

175
00:08:24,920 --> 00:08:27,230
Non producono alcun valore immediato e

176
00:08:27,230 --> 00:08:28,990
quindi sono chiamati affermazioni.

177
00:08:28,990 --> 00:08:31,210
Quindi, diamo un'occhiata a questo qui nella console.

178
00:08:31,210 --> 00:08:33,060
Scriver qui una frase FL molto semplice.

179
00:08:35,561 --> 00:08:37,480
Quindi, diciamo "se  vero", e quindi

180
00:08:37,480 --> 00:08:39,340
questo blocco se qui verr inserito.

181
00:08:39,340 --> 00:08:41,360
Quindi, scriviamo console. registra qui solo

182
00:08:41,360 --> 00:08:45,510
alcuni numeri, alcune cose a caso.

183
00:08:45,510 --> 00:08:47,620
Quindi, non importa qui, quindi premiamo

184
00:08:47,620 --> 00:08:49,490
return, e ora vedi qui che

185
00:08:49,490 --> 00:08:51,730
ci che ritorna qui non  definito.

186
00:08:51,730 --> 00:08:53,720
Ok, quindi non restituisce nulla, ma

187
00:08:53,720 --> 00:08:56,160
questo 23 viene semplicemente da questa console. accedi qui, ma la

188
00:08:56,160 --> 00:08:58,830
dichiarazione stessa, non restituisce nulla.

189
00:08:58,830 --> 00:09:01,900
Quindi,  proprio questa affermazione che non produce un risultato,

190
00:09:01,900 --> 00:09:03,993
quindi questa  la differenza tra espressioni

191
00:09:05,220 --> 00:09:07,740
e affermazioni, va bene?

192
00:09:07,740 --> 00:09:10,260
Quindi, tornando alle funzioni qui, abbiamo imparato che

193
00:09:10,260 --> 00:09:11,870
le espressioni di funzione producono

194
00:09:11,870 --> 00:09:14,824
un risultato immediato, mentre le dichiarazioni di funzione no.

195
00:09:14,824 --> 00:09:16,874
E questo sar davvero molto importante

196
00:09:18,060 --> 00:09:19,693
per alcune situazioni che scoprirai

197
00:09:19,693 --> 00:09:22,340
pi avanti nel corso.

198
00:09:22,340 --> 00:09:25,760
Quindi, in queste due conferenze abbiamo trattato gli stessi

199
00:09:25,760 --> 00:09:28,090
principi fondamentali delle funzioni, ma ovviamente

200
00:09:28,090 --> 00:09:30,980
c' molto di pi da imparare sulle funzioni.

201
00:09:30,980 --> 00:09:34,130
Ma ancora una volta, lo lascer per un po 'pi avanti nel corso,

202
00:09:34,130 --> 00:09:36,050
cos che ora siamo pronti per passare a

203
00:09:36,050 --> 00:09:38,300
un altro argomento enorme ed eccitante, che  cancellato.

204
00:09:38,300 --> 00:09:41,660
&nbsp;

205
00:09:41,660 --> 00:09:43,740
&nbsp;

206
00:09:43,740 --> 00:09:46,293
&nbsp;

207
00:09:46,293 --> 00:09:47,410
&nbsp;

208
00:09:47,410 --> 00:09:49,410
&nbsp;

209
00:09:49,410 --> 00:09:51,530
&nbsp;

210
00:09:51,530 --> 00:09:54,240
&nbsp;

211
00:09:54,240 --> 00:09:56,670
&nbsp;

212
00:09:56,670 --> 00:09:58,880
&nbsp;

213
00:09:58,880 --> 00:10:02,623
&nbsp;

