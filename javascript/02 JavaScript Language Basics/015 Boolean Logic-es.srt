1
00:00:01,020 --> 00:00:03,610
Instructor: Pasemos ahora al siguiente nivel

2
00:00:03,610 --> 00:00:05,970
y aprendamos sobre la lgica booleana.

3
00:00:05,970 --> 00:00:09,050
Y, en este pequeo ejemplo, queremos iniciar sesin en la

4
00:00:09,050 --> 00:00:12,960
consola, dependiendo de la edad de Johns, si es un nio, un

5
00:00:12,960 --> 00:00:15,840
adolescente, un hombre joven o un hombre, est bien.

6
00:00:15,840 --> 00:00:19,240
Y, entonces, comencemos, nuevamente, definiendo el primer nombre

7
00:00:22,300 --> 00:00:24,730
como John y luego la edad.

8
00:00:24,730 --> 00:00:27,840
Y comencemos aqu con 16, por ejemplo.

9
00:00:27,840 --> 00:00:30,840
Bien, entonces usamos nuestra declaracin if else.

10
00:00:30,840 --> 00:00:33,910
Y podemos decir que si John tiene menos

11
00:00:33,910 --> 00:00:38,130
de 13 aos, bueno, entonces, l es un nio, est bien.

12
00:00:38,130 --> 00:00:42,700
Entonces consola. log firstName + es un chico, est bien.

13
00:00:50,970 --> 00:00:52,713
Y luego podemos decir otra

14
00:00:54,900 --> 00:00:57,203
cosa, y copiemos esta lnea de cdigo

15
00:00:58,750 --> 00:01:00,053
aqu, es un hombre.

16
00:01:01,340 --> 00:01:04,280
De acuerdo, entonces eso cubre al chico y al hombre.

17
00:01:04,280 --> 00:01:07,130
Pero cmo decidimos realmente si es un adolescente

18
00:01:07,130 --> 00:01:08,760
o un hombre joven?

19
00:01:08,760 --> 00:01:11,250
Necesitamos algunas opciones ms aqu, verdad?

20
00:01:11,250 --> 00:01:13,620
Y realmente podemos hacer eso con JavaScript.

21
00:01:13,620 --> 00:01:16,380
Entonces en lugar de solo tener el bloque if y

22
00:01:16,380 --> 00:01:18,610
else, tambin podemos tener un bloque else if.

23
00:01:18,610 --> 00:01:20,260
De acuerdo, djame mostrarte eso.

24
00:01:21,360 --> 00:01:25,203
Entonces aqu podemos tener ms, y luego un nuevo if.

25
00:01:28,240 --> 00:01:29,930
As que pongmoslo aqu.

26
00:01:29,930 --> 00:01:32,670
Y, entonces, aqu podemos poner un poco ms de texto.

27
00:01:32,670 --> 00:01:35,200
Y, en realidad, necesitamos agregar una nueva condicin aqu.

28
00:01:35,200 --> 00:01:37,240
Entonces, qu queremos tener aqu?

29
00:01:37,240 --> 00:01:39,640
As que vamos a poner el resultado aqu, en

30
00:01:39,640 --> 00:01:42,210
realidad, para que sepamos de lo que estamos hablando aqu.

31
00:01:42,210 --> 00:01:43,960
Entonces digamos que l es un adolescente.

32
00:01:45,510 --> 00:01:47,250
Y, entonces, el adolescente bsicamente

33
00:01:47,250 --> 00:01:50,550
significa que tiene entre 13 y 20 aos, verdad?

34
00:01:50,550 --> 00:01:52,700
As que vamos a escribir eso aqu como un comentario.

35
00:01:53,750 --> 00:01:58,240
Entre 13 y 20.

36
00:01:58,240 --> 00:02:01,560
Bueno, cmo escribimos una condicin lgica

37
00:02:01,560 --> 00:02:03,530
para expresar exactamente esto?

38
00:02:03,530 --> 00:02:08,040
Entonces, cmo decimos que la edad debe estar entre 13 y 20?

39
00:02:08,040 --> 00:02:10,160
Bueno, eso es un poco difcil, verdad?

40
00:02:10,160 --> 00:02:12,540
As que pensemos un poco ms.

41
00:02:12,540 --> 00:02:15,660
Entonces, entre 13 y 20, lo que

42
00:02:15,660 --> 00:02:20,660
realmente significa es que la edad es mayor o igual, 13, verdad?

43
00:02:21,200 --> 00:02:25,403
Y, al mismo tiempo, tambin es menos de 20.

44
00:02:26,700 --> 00:02:30,900
Correcto, entonces, de nuevo, tener una edad entre 13 y 20

45
00:02:30,900 --> 00:02:34,850
aos debera significar que la edad es igual o mayor que

46
00:02:34,850 --> 00:02:36,810
13 y menos de 20.

47
00:02:36,810 --> 00:02:40,610
Estas dos condiciones aqu al mismo tiempo, est bien.

48
00:02:40,610 --> 00:02:43,230
Y entonces, lo que necesitamos es un operador para esto.

49
00:02:43,230 --> 00:02:47,210
Y, entonces, en realidad, en JavaScript, es un operador final.

50
00:02:47,210 --> 00:02:49,880
Y para aprender cmo funciona ese operador

51
00:02:49,880 --> 00:02:52,213
final, necesitamos hablar sobre la lgica booleana.

52
00:02:53,290 --> 00:02:54,950
Entonces, en un sentido muy amplio,

53
00:02:54,950 --> 00:02:57,660
la lgica booleana es una rama de la informtica

54
00:02:57,660 --> 00:02:59,800
que trata con valores verdaderos y falsos.

55
00:02:59,800 --> 00:03:02,550
Y en realidad es algo bastante importante en la codificacin.

56
00:03:02,550 --> 00:03:05,980
Y entonces debes asegurarte de entender realmente esta parte.

57
00:03:05,980 --> 00:03:06,840
Bien?

58
00:03:06,840 --> 00:03:09,150
Ahora hay varios operadores lgicos que

59
00:03:09,150 --> 00:03:11,170
tratan con valores verdaderos y falsos.

60
00:03:11,170 --> 00:03:12,420
Pero los ms

61
00:03:12,420 --> 00:03:15,490
importantes son los operadores NOT, AND y OR.

62
00:03:15,490 --> 00:03:17,940
Empecemos por mirar el operador AND.

63
00:03:17,940 --> 00:03:20,710
Y aqu tenemos una tabla llamada tabla de

64
00:03:20,710 --> 00:03:24,140
verdad, que nos permite ver el resultado del operador.

65
00:03:24,140 --> 00:03:26,600
Entonces el operador AND funciona as.

66
00:03:26,600 --> 00:03:29,730
Supongamos que tenemos dos variables, A y B.

67
00:03:29,730 --> 00:03:33,810
Solo si la variable A y la variable B son verdaderas,

68
00:03:33,810 --> 00:03:37,690
la expresin A y B se volvern verdaderas, est bien.

69
00:03:37,690 --> 00:03:40,830
En todos los dems casos, el resultado ser falso.

70
00:03:40,830 --> 00:03:43,150
Y es por eso que se llama operador AND.

71
00:03:43,150 --> 00:03:46,120
Porque A y B deben ser verdaderos

72
00:03:46,120 --> 00:03:48,800
para que el resultado tambin sea verdadero.

73
00:03:48,800 --> 00:03:50,870
Entonces, si A o B

74
00:03:50,870 --> 00:03:54,730
son falsos, entonces A y B tambin sern falsos.

75
00:03:54,730 --> 00:03:57,480
Y lo mismo se aplica si hay ms de dos variables.

76
00:03:57,480 --> 00:03:59,540
Solo si todas las variables son verdaderas,

77
00:03:59,540 --> 00:04:02,500
entonces la expresin AND se convertir en verdadera tambin.

78
00:04:02,500 --> 00:04:04,900
Bien, y ahora la segunda tabla de

79
00:04:04,900 --> 00:04:06,740
verdad es para el operador OR.

80
00:04:06,740 --> 00:04:09,230
Y aqu las cosas funcionan de manera diferente.

81
00:04:09,230 --> 00:04:10,730
Entonces, con el operador OR,

82
00:04:10,730 --> 00:04:13,720
es suficiente con que una de las variables sea verdadera

83
00:04:13,720 --> 00:04:16,540
para hacer que A o B se hagan realidad.

84
00:04:16,540 --> 00:04:18,750
Y, nuevamente, eso tiene sentido, verdad?

85
00:04:18,750 --> 00:04:20,420
Por lo tanto, se denomina

86
00:04:20,420 --> 00:04:23,690
operador OR porque solo A o B deben ser verdaderos

87
00:04:23,690 --> 00:04:26,310
para que la expresin final sea verdadera.

88
00:04:26,310 --> 00:04:30,170
El resultado solo ser falso si ambas variables son falsas.

89
00:04:30,170 --> 00:04:33,130
Y podemos ver eso aqu en la tabla de verdad, verdad?

90
00:04:33,130 --> 00:04:33,963
Y, una vez

91
00:04:33,963 --> 00:04:36,760
ms, funciona de la misma manera con mltiples variables.

92
00:04:36,760 --> 00:04:39,350
Por lo tanto, es suficiente que una variable

93
00:04:39,350 --> 00:04:41,720
sea verdadera para que el resultado final sea

94
00:04:41,720 --> 00:04:45,400
verdadero tambin, si hay 3, 4, 5 o incluso 10 variables booleanas.

95
00:04:45,400 --> 00:04:48,080
As es como funcionan el AND y el verdadero operador.

96
00:04:48,080 --> 00:04:51,130
Y luego, finalmente, tambin est el operador NOT.

97
00:04:51,130 --> 00:04:52,810
Y este es realmente simple.

98
00:04:52,810 --> 00:04:54,330
Todo lo que hace es invertir

99
00:04:54,330 --> 00:04:56,600
el valor verdadero o falso de una variable.

100
00:04:56,600 --> 00:05:00,230
Entonces, si la variable A es verdadera, entonces NO A es falsa.

101
00:05:00,230 --> 00:05:03,580
Y si A es falso, bueno, entonces NO A es verdadero.

102
00:05:03,580 --> 00:05:04,860
Entonces, fcil, verdad?

103
00:05:04,860 --> 00:05:06,863
Veamos ahora un par de ejemplos.

104
00:05:07,850 --> 00:05:10,600
Entonces comenzamos definiendo una variable llamada edad.

105
00:05:10,600 --> 00:05:13,400
Entonces tenemos una edad mayor o igual a 20,

106
00:05:13,400 --> 00:05:17,150
que es, por supuesto, falsa, porque 16 es menor que 20.

107
00:05:17,150 --> 00:05:21,030
Entonces tenemos menos de 30 aos, lo cual, por supuesto, es cierto.

108
00:05:21,030 --> 00:05:23,450
Y, finalmente, tenemos el operador NOT.

109
00:05:23,450 --> 00:05:26,650
Entonces sabemos que la edad de menos de 30 aos es verdadera.

110
00:05:26,650 --> 00:05:29,540
Y sabemos que el operador NOT invierte el valor.

111
00:05:29,540 --> 00:05:33,360
Por lo tanto, NO tener menos de 30 aos es, por supuesto, falso.

112
00:05:33,360 --> 00:05:34,800
Tiene sentido, verdad?

113
00:05:34,800 --> 00:05:36,460
De acuerdo, entonces la prxima expresin.

114
00:05:36,460 --> 00:05:38,470
Ya sabemos que la primera parte,

115
00:05:38,470 --> 00:05:41,300
una edad mayor o igual a 20, es falsa.

116
00:05:41,300 --> 00:05:45,020
Y tambin sabemos que la edad de menos de 30 es verdadera.

117
00:05:45,020 --> 00:05:47,690
Entonces, aqu tenemos falso y verdadero.

118
00:05:47,690 --> 00:05:49,560
Entonces, puedes adivinar el resultado?

119
00:05:49,560 --> 00:05:53,200
As es, es falso, porque no son ambos verdaderos.

120
00:05:53,200 --> 00:05:54,100
Bueno?

121
00:05:54,100 --> 00:05:56,160
Ahora la siguiente expresin es similar.

122
00:05:56,160 --> 00:05:58,780
Pero tenemos el operador de OR aqu.

123
00:05:58,780 --> 00:06:00,920
Entonces ahora es verdadero o falso

124
00:06:00,920 --> 00:06:03,080
Entonces, cul ser el resultado esta vez?

125
00:06:03,080 --> 00:06:04,790
Bien, ahora es verdad.

126
00:06:04,790 --> 00:06:06,300
Porque, con el operador OR, es

127
00:06:06,300 --> 00:06:08,610
suficiente para que uno de ellos sea verdadero.

128
00:06:08,610 --> 00:06:10,210
As que espero que tenga sentido.

129
00:06:10,210 --> 00:06:11,570
Y entonces ahora podemos regresar

130
00:06:11,570 --> 00:06:14,380
y usar lo que acabamos de aprender en el cdigo.

131
00:06:14,380 --> 00:06:17,450
De acuerdo, y ahora que sabemos sobre los operadores AND

132
00:06:17,450 --> 00:06:20,360
y OR, en realidad tenemos una forma de escribir la

133
00:06:20,360 --> 00:06:21,440
expresin que necesitamos aqu.

134
00:06:21,440 --> 00:06:23,800
Entonces, lo que queremos aqu es

135
00:06:23,800 --> 00:06:27,430
la edad para ser mayor o igual a 13.

136
00:06:27,430 --> 00:06:29,240
Y, eso es con el

137
00:06:29,240 --> 00:06:31,910
operador AND, como viste antes, escribimos as.

138
00:06:31,910 --> 00:06:35,080
Y entonces queremos una edad mayor o igual a 13.

139
00:06:35,080 --> 00:06:39,450
Y, al mismo tiempo, la edad es menos de 20.

140
00:06:39,450 --> 00:06:41,140
De acuerdo, y eso es todo lo que necesitamos.

141
00:06:41,140 --> 00:06:42,720
Esa es nuestra expresin aqu.

142
00:06:42,720 --> 00:06:45,210
O, bsicamente, nuestra condicin de prueba.

143
00:06:45,210 --> 00:06:48,700
Entonces, digamos que la edad es 16, as es como es ahora.

144
00:06:48,700 --> 00:06:50,660
Entonces, si ahora cargamos esto, bueno,

145
00:06:50,660 --> 00:06:53,810
entonces nos conectamos a la consola, John es un adolescente.

146
00:06:53,810 --> 00:06:55,520
Y entonces en realidad est funcionando.

147
00:06:55,520 --> 00:06:57,402
Entonces, ahora mismo, la edad es 16.

148
00:06:57,402 --> 00:07:00,670
Y entonces la edad es, de hecho, mayor que 13.

149
00:07:00,670 --> 00:07:02,320
Entonces esta parte aqu es verdad.

150
00:07:02,320 --> 00:07:06,640
Entonces la edad tambin es menor a 20, as que esto tambin es cierto.

151
00:07:06,640 --> 00:07:10,220
Y tan verdadero y verdadero lo hace verdadero, como acabamos de aprender.

152
00:07:10,220 --> 00:07:13,330
Y entonces este bloque aqu se ejecuta.

153
00:07:13,330 --> 00:07:14,690
Ahora solo estoy hablando rpidamente

154
00:07:14,690 --> 00:07:16,740
de la precedencia de este operador aqu, mientras

155
00:07:16,740 --> 00:07:19,120
que tiene que ser ms bajo que la precedencia

156
00:07:19,120 --> 00:07:20,380
de este aqu, no?

157
00:07:20,380 --> 00:07:23,240
Porque, por supuesto, primero queremos que esto se ejecute para

158
00:07:23,240 --> 00:07:25,480
terminar con el valor verdadero o falso.

159
00:07:25,480 --> 00:07:26,980
Y luego este aqu.

160
00:07:26,980 --> 00:07:29,210
Y, solo despus de eso, queremos

161
00:07:29,210 --> 00:07:32,470
combinar estos dos valores falsos usando este operador aqu.

162
00:07:32,470 --> 00:07:34,610
Y entonces, por supuesto, el operador

163
00:07:34,610 --> 00:07:36,560
AND y OR, deben tener una

164
00:07:36,560 --> 00:07:39,500
precedencia menor que estos operadores de comparacin, verdad?

165
00:07:39,500 --> 00:07:41,483
As que vamos a ver si eso es cierto.

166
00:07:42,740 --> 00:07:44,470
Y, de hecho, lo es.

167
00:07:44,470 --> 00:07:47,020
Entonces, el Y lgico y el OR

168
00:07:47,020 --> 00:07:50,830
tienen una precedencia ms baja de 6 y 5 que

169
00:07:50,830 --> 00:07:53,300
estas comparaciones, como Menos y Menos

170
00:07:53,300 --> 00:07:55,140
que igual, Mayor y, oh,

171
00:07:55,140 --> 00:07:57,790
s, todos estos operadores de comparacin aqu.

172
00:07:57,790 --> 00:07:59,230
Entonces tienen una precedencia

173
00:07:59,230 --> 00:08:04,230
ms alta y es por eso que funciona de la manera que funciona aqu, est bien.

174
00:08:04,260 --> 00:08:05,710
Y ahora solo un paso final.

175
00:08:05,710 --> 00:08:07,490
Porque queremos un nio, adolescente,

176
00:08:07,490 --> 00:08:12,170
y tambin queremos un joven entre 20 y 30 aos, est bien.

177
00:08:12,170 --> 00:08:14,373
As que creemos un nuevo else si est aqu.

178
00:08:16,560 --> 00:08:19,673
Estas son las condiciones y abre un nuevo bloque.

179
00:08:23,700 --> 00:08:25,510
Entonces un hombre joven.

180
00:08:25,510 --> 00:08:28,010
Y qu queremos que sea la edad ahora?

181
00:08:28,010 --> 00:08:32,310
Bueno, queremos que sea mayor o igual a 20.

182
00:08:32,310 --> 00:08:37,310
Y, al mismo tiempo, ser menos de 30, est bien.

183
00:08:37,570 --> 00:08:39,710
Y si no pusimos este signo igual aqu,

184
00:08:39,710 --> 00:08:42,760
bueno, entonces el 20 no estara cubierto en ninguna parte, verdad?

185
00:08:42,760 --> 00:08:44,560
As que vamos a sacar esto aqu.

186
00:08:44,560 --> 00:08:47,090
Y vaya a 20, as que configure la edad en 20.

187
00:08:47,090 --> 00:08:49,020
Y veamos qu pasa entonces.

188
00:08:49,020 --> 00:08:51,110
Entonces ahora dice que John es un hombre.

189
00:08:51,110 --> 00:08:53,910
Est bien, y eso es porque este 20 aqu no

190
00:08:53,910 --> 00:08:56,180
est incluido, ni en esta condicin ni en esta.

191
00:08:56,180 --> 00:08:58,530
As que aqu es solo menos de 20,

192
00:08:58,530 --> 00:09:00,490
y aqu es mayor que 20.

193
00:09:00,490 --> 00:09:02,240
Pero en ninguna parte es el signo igual.

194
00:09:02,240 --> 00:09:05,670
Y es por eso que tenemos que incluirlo aqu, est bien.

195
00:09:05,670 --> 00:09:07,200
Tambin podramos haberlo incluido aqu.

196
00:09:07,200 --> 00:09:09,080
Pero si alguien que tiene 20

197
00:09:09,080 --> 00:09:10,820
aos ya no es un adolescente,

198
00:09:10,820 --> 00:09:13,160
as que incluimos este registro igual aqu.

199
00:09:13,160 --> 00:09:14,490
Y si lo volvemos a

200
00:09:14,490 --> 00:09:16,800
cargar ahora, bueno, entonces va a decir joven.

201
00:09:16,800 --> 00:09:18,913
De acuerdo, y eso funcion solo acaba de encontrar.

202
00:09:20,090 --> 00:09:22,950
De acuerdo, y creo que eso es suficiente para esta conferencia.

203
00:09:22,950 --> 00:09:24,810
Entonces aprendiste todo sobre la

204
00:09:24,810 --> 00:09:27,780
lgica booleana y los operadores AND, OR y NOT.

205
00:09:27,780 --> 00:09:31,060
Y, tambin, que podemos agregar estos ms si los bloques aqu

206
00:09:31,060 --> 00:09:33,220
a nuestras declaraciones if else, est bien.

207
00:09:33,220 --> 00:09:36,720
Entonces, podemos tener varias sentencias, digamos, if else,

208
00:09:36,720 --> 00:09:39,330
todas en una construccin, como esta.

209
00:09:39,330 --> 00:09:41,710
Est bien, as que asegrate de entender todo esto.

210
00:09:41,710 --> 00:09:45,080
Si es necesario, quizs pueda revisar partes de la conferencia

211
00:09:45,080 --> 00:09:47,380
y luego pasemos al siguiente video.

